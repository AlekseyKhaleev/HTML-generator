@startuml

abstract class QObject {
  ...
}

abstract class ABC {
  ...
}

class HtmlWidget {
  +sections() : int
  +divs() : int
  +bordered() : bool
  +headers() : bool
  +color() : str
  +alignment() : str
}

class Style {
  +name: str
  +body: str
}

class HtmlAdapter {
  +__init__()
  +build_page(obj: HtmlWidget)
  +get_html() : str
  +create_style(color: str, alignment: str, bordered: bool, name: str = "container") : Style
}

abstract class Strategy {
  +add(node: list[Any], value: HtmlTag) : list[Any]
}

class Node {
  +add(node: list[Any], value: HtmlTag) : list[Any]
}

class Leaf {
  +add(node: list[Any], value: HtmlTag) : list[Any]
}

class HtmlBuilder {
  +__init__()
  +add(value: str, strategy: type[Strategy], specs: str = "")
  +create_content(value: str, specs: str) : HtmlTag
  +to_previous() : HtmlBuilder
  +get_result()
}

class HtmlDirector {
  +__init__()
  +build_tree(sections_num: int, divs_num: int, div_style: Style, headers: bool)
  +get_html() : str
}

QObject <|-- HtmlWidget
ABC <|-- HtmlWidget
HtmlWidget --> Style
HtmlAdapter --> HtmlDirector
Strategy <|-- Node
Strategy <|-- Leaf
HtmlBuilder --> Strategy
HtmlBuilder --> HtmlTag
HtmlDirector --> HtmlBuilder

@enduml